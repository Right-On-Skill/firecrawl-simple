name: Build Docker Images

on:
  pull_request:
  workflow_dispatch:

jobs:
  build-api:
    name: Build API Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: true
          load: false
          tags: ghcr.io/right-on-skill/firecrawl-simple:${{ steps.vars.outputs.sha_short }}
          build-args: |
            PORT=8080

  build-puppeteer:
    name: Build Puppeteer Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ./apps/puppeteer-service-ts
          file: ./apps/puppeteer-service-ts/Dockerfile
          push: true
          load: false
          tags: ghcr.io/right-on-skill/fs-puppeteer-service-ts:${{ steps.vars.outputs.sha_short }}
          build-args: |
            PORT=3000
